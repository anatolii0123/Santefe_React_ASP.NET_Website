{"version":3,"sources":["assets/bg-session.png","assets/logo.png","components/public/header/index.tsx","config/api.ts","pages/login/formLogin.tsx","pages/login/index.tsx","pages/register/form.tsx","pages/register/index.tsx","pages/resetPassword/ResetPassword.tsx","pages/resetPassword/ResetPasswordWithToken.tsx","pages/resetPassword/index.tsx","components/private/Chart/styles.ts","components/private/Chart/index.tsx","pages/app/dashboard/styles.ts","pages/app/dashboard/index.tsx","components/private/ClientsTable/index.tsx","components/private/Input/styles.ts","components/private/Input/index.tsx","pages/app/manage-users/styles.ts","pages/app/manage-users/index.tsx","pages/app/client/index.tsx","components/private/DrawerHeader/drawer/list/index.tsx","assets/avatar.png","components/private/DrawerHeader/drawer/user/index.tsx","components/private/DrawerHeader/drawer/index.tsx","assets/logo.svg","components/private/DrawerHeader/header/index.tsx","components/private/DrawerHeader/index.tsx","pages/index.tsx","App.tsx","hooks/useJWT.tsx","reportWebVitals.ts","utils/theme.ts","index.tsx"],"names":["useStyles","makeStyles","createStyles","root","flexGrow","backgroundColor","justifyContent","alignItems","display","flexDirection","overflow","color","verticalDivider","position","minWidth","minHeight","marginLeft","marginRight","background","toolbar","appBar","boxShadow","logo","width","menu","padding","listStyle","textAlign","borderRadius","border","bottom","height","transition","borderSlide","transform","Header","classes","useState","toggle","setToggle","AppBar","className","Toolbar","variant","alt","src","LogoImg","Button","component","NavLink","to","onClick","clsx","api","axios","create","headers","Accept","baseURL","process","validationSchema","yup","email","required","password","min","theme","colorPrimary","barColorPrimary","icon","spacing","form","input","marginBottom","forgotLink","submitBtn","marginTop","divider","content","alignSelf","paddingLeft","paddingRight","googleButton","FormLogin","loading","setLoading","message","setMessage","msgType","setMsgType","push","useHistory","formik","useFormik","initialValues","onSubmit","values","post","then","result","status","data","role","nomeCliente","codCliente","localStorage","setItem","JSON","stringify","catch","err","console","log","finally","Grid","item","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Alert","severity","handleSubmit","LinearProgress","TextField","fullWidth","id","name","label","autoComplete","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","style","subtitle","fontSize","fontWeight","lineHeight","title","login","breakpoints","up","margin","Login","container","xs","Typography","fullName","matches","confirmPassword","test","this","parent","facebookButton","modal","top","left","alignContent","containerModal","Form","isLoading","setIsLoading","setTimeout","paddingTop","paddingBottom","maxWidth","register","Register","ResetPassword","isOpen","setIsOpen","undefined","setSeverity","handleClose","event","reason","response","request","onKeyDown","disabled","TransitionComponent","props","Slide","direction","elevation","oneOf","ResetPasswordWithToken","token","showPassword","setShowPassword","history","handleShowPassword","useEffect","i","setInterval","payload","put","InputProps","endAdornment","InputAdornment","IconButton","aria-label","Index","location","useLocation","pathname","split","pop","length","Container","styled","div","Chart","rest","loader","CircularProgress","options","colors","rootProps","legendToggle","ChartsContainer","Dashboard","code","getItem","Date","getFullYear","startDate","setStartSelectedDate","endDate","setEndSelectedDate","lineChartData","setLineChartData","barChartData1","setBarChartData1","barChartData3","setBarChartData3","barChartData2","setBarChartData2","pieChartData1","setPieChartData1","pieChartData2","setPieChartData2","formatDate","date","d","month","getMonth","day","getDate","year","join","getReportData","start","end","get","pConformData","pNonConformData","bChartData2","map","dat","itemName","conforme","naoConforme","filter","gravidade1","gravidade2","gravidade3","bChartData1","norma","total","bChartData3","nomeBloco","lChartData","checkDate","amount","utils","DateFnsUtils","disableToolbar","format","getTime","KeyboardButtonProps","md","chartType","is3D","legend","maxLines","hAxis","vAxis","ClientsTable","searchTerm","users","onSelectionChange","page","setPage","rowsPerPage","setRowsPerPage","setSelectionModel","handleEditRowModelChange","useCallback","model","onSelectionModelChange","selectionModel","onEditRowModelChange","rows","row","toLowerCase","includes","columns","field","headerName","checkboxSelection","disableSelectionOnClick","rowsPerPageOptions","pageSize","onPageChange","onPageSizeChange","localeText","footerRowSelected","count","componentsProps","pagination","labelRowsPerPage","Input","inputValue","setInputValue","legendText","debounceTimeout","e","target","button","isActive","nav","ManageUsers","openCreate","setCreateModalOpen","editOpen","setEditModalOpen","setUsers","selectedRows","setSelectedRows","createForm","telefone","tecResponsavel","enderecoCliente","cnpjCliente","tipoDoLocal","getUserData","createSubmit","editForm","editSubmit","rusers","user","codUsuario","dataCad","sm","placeholder","Box","editUser","find","setValues","handleEdit","confirm","reportUser","handleViewReport","Modal","aria-labelledby","aria-describedby","overflowY","method","select","MenuItem","paper","palette","shadows","Client","parse","currentPassword","newPassword","passwordForm","updatePassword","NavigationList","List","ListItem","Link","ListItemIcon","ListItemText","primary","People","Person","removeItem","ExitToApp","fill","MemoizedNavigationList","memo","User","avatar","isUserAdmin","imageSource","AvatarImageMock","myname","align","gap","main","MemoizedUser","Drawer","anchor","_path","_path2","_path3","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","viewBox","xmlns","ref","ForwardRef","handleCloseDrawer","edge","menuButton","Menu","DrawerHeader","setOpen","Pages","document","path","render","img","Bg","maxHeight","zIndex","down","App","CssBaseline","JWTContext","createContext","JWTProvider","children","initialJWTState","isAuth","jwt","setJWT","window","Provider","setLocalData","jwtToken","tokenString","removeToken","atobJSON","atob","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","overrides","MuiTouchRipple","child","dark","light","contrastText","secondary","ReactDOM","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.b598c599.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg-session.b7fa25b0.png\";","export default __webpack_public_path__ + \"static/media/logo.2fc31b8c.png\";","import { AppBar, Button, makeStyles, Toolbar } from '@material-ui/core'\r\nimport createStyles from '@material-ui/core/styles/createStyles'\r\nimport clsx from 'clsx'\r\nimport React, { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport LogoImg from '../../../assets/logo.png'\r\n\r\ninterface HeaderProps {}\r\n\r\nfunction Header({}: HeaderProps) {\r\n  const classes = useStyles()\r\n  const [toggle, setToggle] = useState<boolean>(false)\r\n  const handleClickEntrar = () => {\r\n    setToggle(false)\r\n  }\r\n  const handleClickCadastrar = () => {\r\n    setToggle(true)\r\n  }\r\n\r\n  return (\r\n    <AppBar className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar} variant='dense'>\r\n        <img alt='logo' className={classes.logo} src={LogoImg} />\r\n        <div className={classes.verticalDivider} />\r\n        <ul className={classes.menu}>\r\n          <li>\r\n            <Button\r\n              component={NavLink}\r\n              to='/entrar'\r\n              onClick={handleClickEntrar}\r\n            >\r\n              ENTRAR\r\n            </Button>\r\n          </li>\r\n          <li>\r\n            <Button\r\n              component={NavLink}\r\n              to='/cadastrar'\r\n              onClick={handleClickCadastrar}\r\n            >\r\n              CADASTRAR\r\n            </Button>\r\n          </li>\r\n          <span\r\n            className={clsx(classes.border, toggle && classes.borderSlide)}\r\n          />\r\n        </ul>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: '#fafafa',\r\n      justifyContent: 'start',\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      overflow: 'hidden',\r\n      color: '#000',\r\n    },\r\n    verticalDivider: {\r\n      position: 'relative',\r\n      minWidth: 1,\r\n      minHeight: 30,\r\n      marginLeft: 24,\r\n      marginRight: 24,\r\n      background: 'linear-gradient(#fff,#000,#fff)',\r\n    },\r\n    toolbar: {\r\n      backgroundColor: '#fafafa',\r\n    },\r\n    appBar: {\r\n      boxShadow: 'none',\r\n    },\r\n    logo: {\r\n      width: 63,\r\n    },\r\n    menu: {\r\n      position: 'relative',\r\n      display: 'flex',\r\n      padding: 0,\r\n      color: '#000',\r\n      width: 250,\r\n      listStyle: 'none',\r\n      '& > li': {\r\n        display: 'flex',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        '& > a': {\r\n          width: '100%',\r\n          textAlign: 'center',\r\n          borderRadius: 'initial',\r\n        },\r\n      },\r\n    },\r\n    border: {\r\n      position: 'absolute',\r\n      width: 'calc(100% / 2)',\r\n      bottom: 0,\r\n      height: 2,\r\n      background: 'linear-gradient(#fff,#000,#fff)',\r\n      transition: '0.3s ease-in-out',\r\n    },\r\n    borderSlide: {\r\n      transform: 'translateX(100%)',\r\n    },\r\n  })\r\n})\r\n\r\nexport default Header\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n    },\r\n    baseURL: process.env.REACT_APP_BACKEND_API\r\n});\r\n\r\nexport default api\r\n\r\n","import {\r\n  Button,\r\n  createStyles,\r\n  Grid,\r\n  LinearProgress,\r\n  Link,\r\n  TextField,\r\n  Theme,\r\n  Typography,\r\n  Snackbar\r\n} from '@material-ui/core'\r\nimport { Alert, AlertTitle } from '@material-ui/lab'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { useFormik } from 'formik'\r\nimport PropTypes, { InferProps } from 'prop-types'\r\nimport { Redirect } from 'react-router'\r\nimport { useHistory } from 'react-router'\r\nimport { useState } from 'react'\r\nimport * as yup from 'yup'\r\nimport api from '../../config/api'\r\nimport { useJWT } from '../../hooks/useJWT'\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email('Insira um E-mail válido')\r\n    .required('E-mail é obrigatório'),\r\n  password: yup\r\n    .string()\r\n    .min(8, 'A senha deve conter no mínimo 8 caractéres')\r\n    .required('Senha é obrigatória'),\r\n})\r\n\r\nfunction FormLogin() {\r\n  const classes = useStyles()\r\n  const appId = process.env.REACT_APP_FACEBOOK_APP_ID || '4300458399993707'\r\n  const [loading, setLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [msgType, setMsgType] = useState(0)\r\n  // const [location, setLocation] = useState('')\r\n  const { push } = useHistory()\r\n\r\n  // const handleFacebookLogin = (user: any, accessToken: string) => {\r\n  //   console.log(user)\r\n  //   console.log(accessToken)\r\n  // }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      setLoading(true)\r\n      api\r\n        .post('/user/login', values)\r\n        .then((result) => {\r\n          if (result.status === 200) {\r\n            const { role, nomeCliente, codCliente } = result.data\r\n            localStorage.setItem('role', role)\r\n            localStorage.setItem('name', nomeCliente)\r\n            localStorage.setItem('user', JSON.stringify(result.data))\r\n            if (role === 'Cliente') {\r\n              localStorage.setItem('code', codCliente)\r\n            }\r\n            push(role === 'Cliente' ? '/dashboard' : '/cadastros')\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setMsgType(2)\r\n          // setMessage('Invalid Email or Password')\r\n          setMessage('Senha Ou Email está incorrecto')\r\n          console.log(err)\r\n        })\r\n        .finally(() => {\r\n          setLoading(false)\r\n        })\r\n    },\r\n  })\r\n\r\n  return (\r\n    <Grid item className={classes.root}>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={msgType > 0}\r\n        autoHideDuration={3000}\r\n        onClose={() => {\r\n          setMsgType(0)\r\n        }}\r\n      >\r\n        {\r\n          msgType === 1 ? <Alert onClose={() => {\r\n            setMsgType(0)\r\n          }} variant='filled' severity='success'>\r\n            {message}\r\n          </Alert> : (msgType === 2 && <Alert onClose={() => {\r\n            setMsgType(0)\r\n          }} variant='filled' severity='error'>\r\n            {message}\r\n          </Alert>)\r\n        }\r\n      </Snackbar>\r\n      <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n        {loading ? <LinearProgress classes={{ colorPrimary: classes.colorPrimary, barColorPrimary: classes.barColorPrimary }} /> : <></>}\r\n        <TextField\r\n          fullWidth\r\n          id='email'\r\n          name='email'\r\n          label='Email'\r\n          autoComplete='username'\r\n          variant='outlined'\r\n          color='secondary'\r\n          className={classes.input}\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id='password'\r\n          name='password'\r\n          label='Password'\r\n          type='password'\r\n          variant='outlined'\r\n          color='secondary'\r\n          autoComplete='current-password'\r\n          className={classes.input}\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n        {/* <Typography className={classes.forgotLink}>\r\n          <Link\r\n            component={NavLink}\r\n            to='/recuperar'\r\n            style={{ cursor: 'pointer' }}\r\n          >\r\n            {' '}\r\n            Esqueceu a senha?\r\n          </Link>\r\n        </Typography> */}\r\n        <Button\r\n          type='submit'\r\n          variant='contained'\r\n          color='primary'\r\n          fullWidth\r\n          style={{ backgroundColor: '#1f497d' }}\r\n          className={classes.submitBtn}\r\n        >\r\n          Entrar\r\n        </Button>\r\n        {/* <Typography className={classes.divider} component='div'>\r\n          <span>ou</span>\r\n        </Typography> */}\r\n        {/* <Grid container justify={'space-between'}>\r\n          <Grid item className={classes.paddingRight} xs={6}>\r\n            <Button\r\n              variant='contained'\r\n              fullWidth\r\n              className={classes.googleButton}\r\n              color='primary'\r\n            >\r\n              <img\r\n                alt='Google Icon'\r\n                className={classes.icon}\r\n                src={GoogleIcon}\r\n              />{' '}\r\n              Google\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={classes.paddingLeft} item xs={6}>\r\n            <FacebookButton\r\n              provider='facebook'\r\n              appId={appId}\r\n              scope='public_profile,email'\r\n              onLoginSuccess={(user) =>\r\n                handleFacebookLogin(user._profile, user._token.accessToken)\r\n              }\r\n              onLoginFailure={(err) => console.log(err)}\r\n            />\r\n            <Button\r\n              variant='contained'\r\n              fullWidth\r\n              className={classes.facebookButton}\r\n              color='primary'\r\n            >\r\n              <img\r\n                alt='FacebookIcon'\r\n                className={classes.icon}\r\n                src={FacebookIcon}\r\n              />{' '}\r\n              Facebook\r\n            </Button>\r\n          </Grid>\r\n        </Grid> */}\r\n      </form>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      width: '100%',\r\n    },\r\n    colorPrimary: {\r\n      backgroundColor: '#1f497d',\r\n    },\r\n    barColorPrimary: {\r\n      backgroundColor: '#ffffff',\r\n    },\r\n    icon: {\r\n      color: '#fff',\r\n      marginRight: theme.spacing(1.5),\r\n    },\r\n    form: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      flexGrow: 1,\r\n    },\r\n    input: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    forgotLink: {\r\n      textAlign: 'right',\r\n    },\r\n    submitBtn: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    divider: {\r\n      display: 'flex',\r\n      textAlign: 'center',\r\n      '&>span': {\r\n        marginBottom: 3.5,\r\n        color: '#aaa',\r\n      },\r\n      '&::after': {\r\n        content: '\"\"',\r\n        alignSelf: 'center',\r\n        flexGrow: 1,\r\n        backgroundColor: '#ccc',\r\n        height: 1,\r\n        marginBottom: 3,\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n      '&::before': {\r\n        content: '\"\"',\r\n        alignSelf: 'center',\r\n        flexGrow: 1,\r\n        backgroundColor: '#ccc',\r\n        height: 1,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: 3,\r\n      },\r\n    },\r\n\r\n    paddingLeft: {\r\n      paddingLeft: theme.spacing(1),\r\n    },\r\n    paddingRight: {\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n\r\n    googleButton: {\r\n      background: '#DD4B38',\r\n    },\r\n  })\r\n)\r\n\r\nexport default FormLogin","import { Grid, Theme, Typography } from '@material-ui/core'\r\nimport { createStyles, makeStyles } from '@material-ui/styles'\r\nimport FormLogin from './formLogin'\r\ninterface LoginProps { }\r\n\r\nfunction Login() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container className={classes.login}>\r\n      <Grid item xs={12}>\r\n        <Typography variant='h5' className={classes.title}>\r\n          Bem Vindo\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography className={classes.subtitle} variant='subtitle1'>\r\n          Entre no sistema inserindo suas credências abaixo:\r\n        </Typography>\r\n      </Grid>\r\n      <FormLogin />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    subtitle: {\r\n      fontSize: 18,\r\n      fontWeight: 'lighter',\r\n      lineHeight: 1.5,\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    title: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    login: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'start',\r\n      justifyContent: 'center',\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 380,\r\n        margin: '0 auto',\r\n      },\r\n    },\r\n  })\r\n)\r\n\r\nexport default Login\r\n","import {\r\n  Button,\r\n  createStyles,\r\n  Grid,\r\n  LinearProgress,\r\n  Snackbar,\r\n  TextField,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport { Alert, AlertTitle } from '@material-ui/lab'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { useFormik } from 'formik'\r\nimport { SyntheticEvent, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport FacebookIcon from '../../assets/icons/facebook-icon.svg'\r\nimport GoogleIcon from '../../assets/icons/google-plus-icon.svg'\r\nimport api from '../../config/api'\r\n\r\ninterface UserData {\r\n  fullName: string\r\n  email: string\r\n  password: string\r\n  confirmPassword: string\r\n}\r\n\r\nconst validationSchema = yup.object({\r\n  fullName: yup.string().required('O Primeiro nome é obrigatório'),\r\n  email: yup\r\n    .string()\r\n    .email('insira um E-mail válido')\r\n    .required('E-mail é obrigatório'),\r\n  password: yup\r\n    .string()\r\n    .matches(\r\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n      'A senha deve conter 8 caracteres sendo 1 maiúsculo, 1 numérico e 1 caractere especial'\r\n    ),\r\n  confirmPassword: yup\r\n    .string()\r\n    .matches(\r\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n      'A senha deve conter 8 caracteres sendo 1 maiúsculo, 1 numérico e 1 caractere especial'\r\n    )\r\n    .test('match', 'as senhas não batem', function (confirmPassword) {\r\n      return confirmPassword === this.parent.password\r\n    }),\r\n})\r\n\r\nfunction Form() {\r\n  const classes = useStyles()\r\n  const { push } = useHistory()\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [msgType, setMsgType] = useState(0)\r\n\r\n  const onSubmit = (values: UserData) => {\r\n    setIsLoading(true)\r\n    api\r\n      .post('/user/register', values)\r\n      .then((result) => {\r\n        if (result.status === 200) {\r\n          setMsgType(1)\r\n          setMessage('Usuário criado com sucesso.')\r\n\r\n          setTimeout(() => {\r\n            push('/entrar')\r\n          }, 3000)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMsgType(2)\r\n        setMessage(err.message)\r\n      })\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      fullName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    },\r\n    validationSchema,\r\n    onSubmit,\r\n  })\r\n\r\n  return (\r\n    <Grid item className={classes.root}>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={msgType > 0}\r\n        autoHideDuration={3000}\r\n        onClose={() => {\r\n          setMsgType(0)\r\n        }}\r\n      >\r\n        {\r\n          msgType === 1 ? <Alert onClose={() => {\r\n            setMsgType(0)\r\n          }} variant='filled' severity='success'>\r\n            {message}\r\n          </Alert> : (msgType === 2 && <Alert onClose={() => {\r\n            setMsgType(0)\r\n          }} variant='filled' severity='error'>\r\n            {message}\r\n          </Alert>)\r\n        }\r\n      </Snackbar>\r\n      <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n        {isLoading ? <LinearProgress classes={{ colorPrimary: classes.colorPrimary, barColorPrimary: classes.barColorPrimary }} /> : <></>}\r\n        <TextField\r\n          fullWidth\r\n          id='fullName'\r\n          name='fullName'\r\n          label='Nome Cliente'\r\n          autoComplete='fullName'\r\n          variant='outlined'\r\n          color='secondary'\r\n          className={classes.input}\r\n          value={formik.values.fullName}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.fullName && Boolean(formik.errors.fullName)}\r\n          helperText={formik.touched.fullName && formik.errors.fullName}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id='email'\r\n          name='email'\r\n          label='Email'\r\n          autoComplete='username'\r\n          variant='outlined'\r\n          color='secondary'\r\n          className={classes.input}\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id='password'\r\n          name='password'\r\n          label='Senha'\r\n          autoComplete='password'\r\n          type='password'\r\n          variant='outlined'\r\n          color='secondary'\r\n          className={classes.input}\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id='confirmPassword'\r\n          name='confirmPassword'\r\n          label='Confirmar Senha'\r\n          autoComplete='confirmPassword'\r\n          type='password'\r\n          variant='outlined'\r\n          color='secondary'\r\n          className={classes.input}\r\n          value={formik.values.confirmPassword}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.confirmPassword &&\r\n            Boolean(formik.errors.confirmPassword)\r\n          }\r\n          helperText={\r\n            formik.touched.confirmPassword && formik.errors.confirmPassword\r\n          }\r\n        />\r\n        <Button\r\n          type='submit'\r\n          variant='contained'\r\n          color='primary'\r\n          fullWidth\r\n          className={classes.submitBtn}\r\n          style={{ backgroundColor: '#1f497d' }}\r\n        >\r\n          Cadastrar\r\n        </Button>\r\n        {/* <Typography className={classes.divider} component='div'>\r\n          <span>ou</span>\r\n        </Typography> */}\r\n        {/* <Grid container justify={'space-between'}>\r\n          <Grid item className={classes.paddingRight} xs={6}>\r\n            <Button\r\n              variant='contained'\r\n              fullWidth\r\n              className={classes.googleButton}\r\n              color='primary'\r\n            >\r\n              <img\r\n                alt='Google Icon'\r\n                className={classes.icon}\r\n                src={GoogleIcon}\r\n              />{' '}\r\n              Google\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={classes.paddingLeft} item xs={6}>\r\n            <Button\r\n              variant='contained'\r\n              fullWidth\r\n              className={classes.facebookButton}\r\n              color='primary'\r\n            >\r\n              <img\r\n                alt='FacebookIcon'\r\n                className={classes.icon}\r\n                src={FacebookIcon}\r\n              />{' '}\r\n              Facebook\r\n            </Button>\r\n          </Grid>\r\n        </Grid> */}\r\n      </form>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      width: '100%',\r\n    },\r\n    form: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      flexGrow: 1,\r\n    },\r\n    input: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    forgotLink: {\r\n      textAlign: 'right',\r\n    },\r\n    submitBtn: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    divider: {\r\n      display: 'flex',\r\n      textAlign: 'center',\r\n      '&>span': {\r\n        marginBottom: 3.5,\r\n        color: '#aaa',\r\n      },\r\n      '&::after': {\r\n        content: '\"\"',\r\n        alignSelf: 'center',\r\n        flexGrow: 1,\r\n        backgroundColor: '#ccc',\r\n        height: 1,\r\n        marginBottom: 3,\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n      '&::before': {\r\n        content: '\"\"',\r\n        alignSelf: 'center',\r\n        flexGrow: 1,\r\n        backgroundColor: '#ccc',\r\n        height: 1,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: 3,\r\n      },\r\n    },\r\n    icon: {\r\n      color: '#fff',\r\n      marginRight: theme.spacing(1.5),\r\n    },\r\n    paddingLeft: {\r\n      paddingLeft: theme.spacing(1),\r\n    },\r\n    paddingRight: {\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    facebookButton: {\r\n      background: '#1479BD',\r\n    },\r\n    googleButton: {\r\n      background: '#DD4B38',\r\n    },\r\n    modal: {\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignContent: 'center',\r\n      width: 412,\r\n      height: 315,\r\n      backgroundColor: '#fafafa',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n    containerModal: {},\r\n    colorPrimary: {\r\n      backgroundColor: '#1f497d',\r\n    },\r\n    barColorPrimary: {\r\n      backgroundColor: '#ffffff',\r\n    },\r\n  })\r\n)\r\nexport default Form\r\n","import {\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport Form from './form'\r\n\r\nfunction Register() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid className={classes.register} container>\r\n      <Grid item xs={12}>\r\n        <Typography variant='h5'>Cadastro</Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant='subtitle1'>\r\n          Efetue seu cadastro abaixo usando seu email e senha:\r\n        </Typography>\r\n      </Grid>\r\n      <Form />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      height: '100vh',\r\n      paddingTop: 58,\r\n      paddingBottom: 58,\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      maxWidth: 288,\r\n      overflow: 'hidden',\r\n      [theme.breakpoints.up('sm')]: {\r\n        maxWidth: 520,\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        maxWidth: '100vw',\r\n        margin: 'initial',\r\n        justifyContent: 'space-between',\r\n        paddingLeft: 'initial',\r\n        paddingRight: 'initial',\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        justifyContent: 'center',\r\n      },\r\n    },\r\n    register: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'start',\r\n      justifyContent: 'center',\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 380,\r\n        margin: '0 auto',\r\n      },\r\n    },\r\n  })\r\n)\r\n\r\nexport default Register\r\n","import {\r\n  Button,\r\n  createStyles,\r\n  Grid,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Slide,\r\n  Snackbar,\r\n  TextField,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport { Alert, Color } from '@material-ui/lab'\r\nimport { useFormik } from 'formik'\r\nimport React, { useState } from 'react'\r\nimport * as yup from 'yup'\r\nimport api from '../../config/api'\r\ninterface ResetPasswordProps { }\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email('Insira um E-mail válido')\r\n    .required('E-mail é obrigatório'),\r\n})\r\n\r\nfunction ResetPassword({ }: ResetPasswordProps) {\r\n  const classes = useStyles()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [severity, setSeverity] = useState<Color | undefined>(undefined)\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') return\r\n    setIsOpen(false)\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      setIsLoading(true)\r\n      setIsOpen(false)\r\n      api\r\n        .post('/auth/reset-password', values)\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            setSeverity('success')\r\n            setMessage(response.data.message)\r\n            setIsOpen(true)\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error.response) {\r\n            const { response } = error\r\n            if (response.status === 404) {\r\n              setMessage(response.data.message)\r\n              setIsOpen(true)\r\n              setSeverity('error')\r\n            }\r\n          } else if (error.request) {\r\n            console.log(error.request)\r\n          } else console.log('Error:', error.message)\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false)\r\n        })\r\n    },\r\n  })\r\n  return (\r\n    <Grid className={classes.register} container>\r\n      <Grid item xs={12}>\r\n        <Typography variant='h5'>Redefinir Senha</Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant='subtitle1'>\r\n          Digite seu email a baixo que enviaremos um email para você\r\n        </Typography>\r\n      </Grid>\r\n      <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n        {isLoading ? <LinearProgress classes={{ colorPrimary: classes.colorPrimary, barColorPrimary: classes.barColorPrimary }} /> : <></>}\r\n        <TextField\r\n          fullWidth\r\n          id='email'\r\n          name='email'\r\n          label='email'\r\n          autoComplete='username'\r\n          variant='outlined'\r\n          color='secondary'\r\n          onKeyDown={() => setIsOpen(false)}\r\n          className={classes.input}\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n\r\n        <Button\r\n          type='submit'\r\n          fullWidth\r\n          variant='contained'\r\n          disabled={isLoading}\r\n          color='primary'\r\n        >\r\n          enviar\r\n        </Button>\r\n      </form>\r\n      <Snackbar\r\n        open={isOpen}\r\n        onClose={handleClose}\r\n        TransitionComponent={(props) => <Slide {...props} direction='up' />}\r\n        autoHideDuration={5000}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n      >\r\n        <Alert\r\n          elevation={6}\r\n          variant='filled'\r\n          onClose={handleClose}\r\n          severity={severity}\r\n        >\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    register: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'start',\r\n      justifyContent: 'center',\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 380,\r\n        margin: '0 auto',\r\n      },\r\n    },\r\n    form: {\r\n      width: '100%',\r\n    },\r\n    input: {\r\n      marginBottom: theme.spacing(2),\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    colorPrimary: {\r\n      backgroundColor: '#1f497d',\r\n    },\r\n    barColorPrimary: {\r\n      backgroundColor: '#ffffff',\r\n    },\r\n  })\r\n)\r\n\r\nexport default ResetPassword\r\n","import {\r\n  Button,\r\n  createStyles,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Slide,\r\n  Snackbar,\r\n  TextField,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport Visibility from '@material-ui/icons/Visibility'\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\r\nimport { Alert, Color } from '@material-ui/lab'\r\nimport { useFormik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport api from '../../config/api'\r\ninterface Props {\r\n  token: string\r\n}\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email('Insira um E-mail válido')\r\n    .required('E-mail é obrigatório'),\r\n  password: yup\r\n    .string()\r\n    .required('Senha é obrigatória')\r\n    .matches(\r\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n      'A senha deve conter 8 caracteres sendo 1 maiúsculo, 1 numérico e 1 caractere especial'\r\n    ),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref('password'), null], 'As senhas devem ser iguais.'),\r\n})\r\n\r\nfunction ResetPasswordWithToken(props: Props) {\r\n  const { token } = props\r\n  const classes = useStyles()\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const history = useHistory()\r\n  const [severity, setSeverity] = useState<Color | undefined>(undefined)\r\n  const [message, setMessage] = useState('')\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword(!showPassword)\r\n  }\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') return\r\n    setIsOpen(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (severity === 'success') {\r\n      let i = 1\r\n      setInterval(() => {\r\n        if (i === 6) {\r\n          history.push('/entrar')\r\n        }\r\n        i++\r\n      }, 1000)\r\n    }\r\n  }, [severity])\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      setIsLoading(true)\r\n      const payload = { ...values, token }\r\n\r\n      api\r\n        .put('/auth/reset-password-with-token', { ...payload })\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            setSeverity('success')\r\n            setMessage(response.data.message)\r\n            setIsOpen(true)\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error.response) {\r\n            const { response } = error\r\n\r\n            if (response.status === 400) {\r\n              setSeverity('error')\r\n              setMessage('Token de verificação de senha inválido.')\r\n              setIsOpen(true)\r\n            }\r\n\r\n            if (response.status === 404) {\r\n              setSeverity('error')\r\n              setMessage('Usuário não encontrado')\r\n              setIsOpen(true)\r\n            }\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false)\r\n        })\r\n    },\r\n  })\r\n  return (\r\n    <Grid className={classes.register} container>\r\n      <Grid item xs={12}>\r\n        <Typography variant='h5'>Recuperar Senha</Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant='subtitle1'>\r\n          Efetue seu cadastro abaixo usando seu email e senha:\r\n        </Typography>\r\n      </Grid>\r\n      <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n        {isLoading ? <LinearProgress classes={{ colorPrimary: classes.colorPrimary, barColorPrimary: classes.barColorPrimary }} /> : <></>}\r\n        <TextField\r\n          fullWidth\r\n          id='email'\r\n          name='email'\r\n          label='Email'\r\n          autoComplete='username'\r\n          variant='outlined'\r\n          color='secondary'\r\n          className={classes.input}\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id='password'\r\n          name='password'\r\n          label='Senha'\r\n          type={showPassword ? 'text' : 'password'}\r\n          variant='outlined'\r\n          color='secondary'\r\n          autoComplete='current-password'\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position='end'>\r\n                <IconButton\r\n                  aria-label='toggle password visibility'\r\n                  onClick={handleShowPassword}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          className={classes.input}\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id='confirmPassword'\r\n          name='confirmPassword'\r\n          label='Confirmar Senha'\r\n          type={showPassword ? 'text' : 'password'}\r\n          variant='outlined'\r\n          color='secondary'\r\n          autoComplete='current-password'\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position='end'>\r\n                <IconButton\r\n                  aria-label='toggle password visibility'\r\n                  onClick={handleShowPassword}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          className={classes.input}\r\n          value={formik.values.confirmPassword}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.confirmPassword &&\r\n            Boolean(formik.errors.confirmPassword)\r\n          }\r\n          helperText={\r\n            formik.touched.confirmPassword && formik.errors.confirmPassword\r\n          }\r\n        />\r\n\r\n        <Button\r\n          type='submit'\r\n          fullWidth\r\n          variant='contained'\r\n          color='primary'\r\n          disabled={isLoading}\r\n        >\r\n          Redefinir\r\n        </Button>\r\n      </form>\r\n      <Snackbar\r\n        open={isOpen}\r\n        onClose={handleClose}\r\n        TransitionComponent={(props) => <Slide {...props} direction='up' />}\r\n        autoHideDuration={5000}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n      >\r\n        <Alert\r\n          elevation={6}\r\n          variant='filled'\r\n          onClose={handleClose}\r\n          severity={severity}\r\n        >\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    register: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'start',\r\n      justifyContent: 'center',\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 380,\r\n        margin: '0 auto',\r\n      },\r\n    },\r\n    form: {\r\n      width: '100%',\r\n    },\r\n    input: {\r\n      marginBottom: theme.spacing(2),\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    colorPrimary: {\r\n      backgroundColor: '#1f497d',\r\n    },\r\n    barColorPrimary: {\r\n      backgroundColor: '#ffffff',\r\n    },\r\n  })\r\n)\r\n\r\nexport default ResetPasswordWithToken\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport ResetPassword from './ResetPassword'\r\nimport ResetPasswordWithToken from './ResetPasswordWithToken'\r\n\r\ninterface ResetProps {}\r\n\r\nfunction Index({}: ResetProps) {\r\n  const location = useLocation()\r\n  const token: string =\r\n    location.pathname.split('/recuperar/').pop() !== '/recuperar'\r\n      ? (location.pathname.split('/recuperar/').pop() as string)\r\n      : ''\r\n\r\n  return token && token.length > 0 ? (\r\n    <ResetPasswordWithToken token={token} />\r\n  ) : (\r\n    <ResetPassword />\r\n  )\r\n}\r\n\r\nexport default Index\r\n","import styled from '@emotion/styled'\n\nexport const Container = styled.div`\n  min-height: 400px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding: 12px 14px;\n  background: #e9f3ff;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.25);\n  border-radius: 4px;\n`\n\nexport const Header = styled.div`\n  // width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  h2 {\n    font-size: 1.25rem;\n    color: #000000;\n    font-weight: 400;\n  }\n\n  > span {\n    opacity: 0.6;\n  }\n`\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { CircularProgress, Icon } from '@material-ui/core'\nimport { default as GoogleChart } from 'react-google-charts'\nimport { ReactGoogleChartProps } from 'react-google-charts/dist/types'\nimport { Container, Header } from './styles'\n\nexport interface ChartProps extends ReactGoogleChartProps {\n  title: string\n}\n\nexport const Chart = ({ title, ...rest }: ChartProps) => {\n  return (\n    <Container>\n      <Header>\n        <h2>{title}</h2>\n      </Header>\n      <GoogleChart\n        width='100%'\n        height='400px'\n        loader={<CircularProgress />}\n        options={\n          {\n            colors: ['rgb(31, 73, 125)', 'orange', 'red'],\n          }\n        }\n        {...rest}\n        rootProps={{ 'placeholder': 'NO DATA' }}\n        legendToggle\n      />\n    </Container>\n  )\n}\n","import styled from '@emotion/styled'\n\nexport const ChartsContainer = styled.div`\n  display: grid;\n  grid-gap: 30px;\n`\n","import { Container, createStyles, LinearProgress, makeStyles, Snackbar, Theme } from '@material-ui/core'\r\n\r\nimport { Alert, AlertTitle } from '@material-ui/lab'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { Chart } from '../../../components/private/Chart'\r\n// import { Drawer } from '../../../components/private/Drawer'\r\nimport { ChartsContainer } from './styles'\r\n\r\nimport 'date-fns';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n  DatePicker\r\n} from '@material-ui/pickers';\r\n\r\nimport api from '../../../config/api'\r\n\r\nexport function Dashboard() {\r\n\r\n  const classes = useStyles()\r\n  const code = localStorage.getItem('code')\r\n\r\n  const [message, setMessage] = useState('')\r\n  const [msgType, setMsgType] = useState(0)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const [startDate, setStartSelectedDate] = useState(new Date(new Date().getFullYear(), 0, 1));\r\n  const [endDate, setEndSelectedDate] = useState(new Date(new Date().getFullYear(), 11, 31));\r\n\r\n  const handleStartDateChange = (date: any) => {\r\n    if (date.getTime() <= endDate.getTime()) {\r\n      setStartSelectedDate(date);\r\n      getReportData(date, endDate)\r\n    } else {\r\n      setMsgType(2)\r\n      // setMessage('Please selece correct date!')\r\n      setMessage('Escolha a data correcta !')\r\n    }\r\n  };\r\n\r\n  const handleEndDateChange = (date: any) => {\r\n    if (startDate.getTime() <= date.getTime()) {\r\n      setEndSelectedDate(date);\r\n      getReportData(startDate, date)\r\n    } else {\r\n      setMsgType(2)\r\n      // setMessage('Please selece correct date!')\r\n      setMessage('Escolha a data correcta !')\r\n    }\r\n  };\r\n\r\n  const [lineChartData, setLineChartData] = useState([\r\n    ['Date', 'Quantidade']\r\n  ]);\r\n\r\n  const [barChartData1, setBarChartData1] = useState([\r\n    ['', 'Normas Nao atendidas']\r\n  ]);\r\n\r\n  const [barChartData3, setBarChartData3] = useState([\r\n    ['', 'Não Conforme']\r\n  ]);\r\n\r\n  const [barChartData2, setBarChartData2] = useState([\r\n    ['', 'Gravidade Baixa', 'Gravidade Media', 'Gravidade Alta']\r\n  ]);\r\n\r\n  const [pieChartData1, setPieChartData1] = useState([\r\n    ['Item Name', 'Conforme']\r\n  ]);\r\n\r\n  const [pieChartData2, setPieChartData2] = useState([\r\n    ['Item Name', 'Naoconforme']\r\n  ]);\r\n\r\n  const formatDate = (date: Date) => {\r\n    const d = new Date(date)\r\n    let month = '' + (d.getMonth() + 1), day = '' + d.getDate()\r\n    const year = d.getFullYear()\r\n\r\n    if (month.length < 2)\r\n      month = '0' + month;\r\n    if (day.length < 2)\r\n      day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n  }\r\n\r\n  const getReportData = (start, end) => {\r\n    setLoading(true)\r\n    const code = localStorage.getItem('code')\r\n    api\r\n      .get(`/qualification?codCliente=${code}&start=${formatDate(start)}&end=${formatDate(end)}`)\r\n      .then((result) => {\r\n        if (result.status === 200) {\r\n          const pConformData = [['Item Name', 'Conforme']]\r\n          const pNonConformData = [['Item Name', 'Naoconforme']]\r\n          const bChartData2 = [['', 'Gravidade Baixa', 'Gravidade Media', 'Gravidade Alta']]\r\n          result.data.map((dat: { itemName: string; conforme: string; }) => pConformData.push([dat.itemName, dat.conforme]))\r\n          result.data.map((dat: { itemName: string; naoConforme: string; }) => pNonConformData.push([dat.itemName, dat.naoConforme]))\r\n          result.data.filter(dat => dat.naoConforme !== 0).map((dat: { itemName: string; gravidade1: string; gravidade2: string, gravidade3: string }) => bChartData2.push([`${dat.itemName}`, dat.gravidade1, dat.gravidade2, dat.gravidade3]))\r\n          setPieChartData1(pNonConformData)\r\n          setPieChartData2(pConformData)\r\n          setBarChartData2(bChartData2)\r\n        }\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setLoading(false))\r\n\r\n    api\r\n      .get(`/standard?codCliente=${code}&start=${formatDate(start)}&end=${formatDate(end)}`)\r\n      .then((result) => {\r\n        if (result.status === 200) {\r\n          const bChartData1 = [['', 'Normas Nao atendidas']]\r\n          result.data.map((dat: { norma: string; total: string; }) => bChartData1.push([dat.norma, dat.total]))\r\n          setBarChartData1(bChartData1)\r\n        }\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setLoading(false))\r\n\r\n    api\r\n      .get(`/local?codCliente=${code}&start=${formatDate(start)}&end=${formatDate(end)}`)\r\n      .then((result) => {\r\n        if (result.status === 200) {\r\n          const bChartData3 = [['', 'Não Conforme']]\r\n          result.data.map((dat: { nomeBloco: string; total: string; }) => bChartData3.push([dat.nomeBloco, dat.total]))\r\n          setBarChartData3(bChartData3)\r\n        }\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setLoading(false))\r\n\r\n    api\r\n      .get(`/nonconformityamount?codCliente=${code}&start=${formatDate(start)}&end=${formatDate(end)}`)\r\n      .then((result) => {\r\n        if (result.status === 200) {\r\n          const lChartData = [['Date', 'Quantidade']]\r\n          result.data.map((dat: { checkDate: string; amount: string; }) => lChartData.push([dat.checkDate, dat.amount]))\r\n          setLineChartData(lChartData)\r\n        }\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setLoading(false))\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getReportData(startDate, endDate)\r\n    return () => {\r\n      console.log(\"Will Un Mount\")\r\n    }\r\n  }, []);\r\n\r\n  if (!code) {\r\n    return <Redirect to='/cadastros' />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={msgType > 0}\r\n        autoHideDuration={3000}\r\n        onClose={() => {\r\n          setMsgType(0)\r\n        }}\r\n      >\r\n        {\r\n          msgType === 1 ? <Alert onClose={() => {\r\n            setMsgType(0)\r\n          }} variant='filled' severity='success'>\r\n            {message}\r\n          </Alert> : (msgType === 2 && <Alert onClose={() => {\r\n            setMsgType(0)\r\n          }} variant='filled' severity='error'>\r\n            {message}\r\n          </Alert>)\r\n        }\r\n      </Snackbar>\r\n      {loading ? <LinearProgress classes={{ colorPrimary: classes.colorPrimary, barColorPrimary: classes.barColorPrimary }} /> : <></>}\r\n      <div className=\"m-5\">\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <Grid container style={{ justifyContent: \"center\" }}>\r\n            <KeyboardDatePicker\r\n              disableToolbar\r\n              variant=\"inline\"\r\n              format=\"MM/dd/yyyy\"\r\n              margin=\"normal\"\r\n              id=\"date-picker-inline\"\r\n              label=\"Data de Início\"\r\n              value={startDate}\r\n              onChange={handleStartDateChange}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change date',\r\n              }}\r\n              style={{ margin: '20px' }}\r\n            />\r\n            <KeyboardDatePicker\r\n              disableToolbar\r\n              variant=\"inline\"\r\n              format=\"MM/dd/yyyy\"\r\n              margin=\"normal\"\r\n              id=\"date-picker-inline\"\r\n              label=\"Data do Fim\"\r\n              value={endDate}\r\n              onChange={handleEndDateChange}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change date',\r\n              }}\r\n              style={{ margin: '20px' }}\r\n            />\r\n          </Grid>\r\n        </MuiPickersUtilsProvider>\r\n      </div>\r\n      <Container maxWidth='lg' className={classes.container} style={{ marginBottom: '50px' }}>\r\n        <ChartsContainer>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <Chart\r\n                title='Conformidade'\r\n                chartType='PieChart'\r\n                data={pieChartData2}\r\n                options={{\r\n                  'is3D': true,\r\n                  'legend': 'bottom',\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Chart\r\n                title='Não Conformidade'\r\n                chartType='PieChart'\r\n                data={pieChartData1}\r\n                options={{\r\n                  is3D: true,\r\n                  'legend': 'bottom',\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Chart\r\n                title='Gravidade'\r\n                chartType='BarChart'\r\n                data={barChartData2}\r\n                options={\r\n                  {\r\n                    colors: ['rgb(31, 73, 125)', 'orange', 'red'],\r\n                    legend: { position: 'bottom', maxLines: 3 },\r\n                    hAxis: {\r\n                      title: '',\r\n                    },\r\n                    vAxis: {\r\n                      title: '',\r\n                    },\r\n                  }\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Chart\r\n                title='Quantidade de Não Conformidade'\r\n                chartType='LineChart'\r\n                data={lineChartData}\r\n                options={{\r\n                  'legend': 'bottom',\r\n                  hAxis: {\r\n                    title: '',\r\n                  },\r\n                  vAxis: {\r\n                    title: '',\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Chart\r\n                title='Normas'\r\n                chartType='BarChart'\r\n                data={barChartData1}\r\n                options={\r\n                  {\r\n                    colors: ['rgb(31, 73, 125)', 'orange', 'red'],\r\n                    'legend': 'bottom',\r\n                  }\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Chart\r\n                title='Relatório Não Conformidade Por Locais'\r\n                chartType='BarChart'\r\n                data={barChartData3}\r\n                options={\r\n                  {\r\n                    colors: ['rgb(31, 73, 125)', 'orange', 'red'],\r\n                    'legend': 'bottom',\r\n                  }\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </ChartsContainer>\r\n        {/* <Drawer /> */}\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    container: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    colorPrimary: {\r\n      backgroundColor: '#1f497d',\r\n    },\r\n    barColorPrimary: {\r\n      backgroundColor: '#ffffff',\r\n    }\r\n  })\r\n)\r\n","import {\n  DataGrid,\n  GridColDef,\n  GridEditRowModelParams,\n  GridPageChangeParams,\n  GridRowId,\n  GridSelectionModelChangeParams,\n  useGridSlotComponentProps,\n} from '@material-ui/data-grid'\n\nimport { ChangeEvent, useCallback, useEffect, useState } from 'react'\n// import { clientsData } from '../../../mock'\n\ninterface User {\n  id: number;\n  nomeCliente: string,\n  cnpjCliente: string,\n  tecResponsavel: string,\n  enderecoCliente: string,\n  tipoDoLocal: string,\n  email: string,\n  role: string,\n  telefone: string,\n  codUsuario: string,\n  dataCad: string\n}\n\ninterface ClientsTable {\n  searchTerm: string,\n  users: User[],\n  onSelectionChange: any\n}\n\nexport default function ClientsTable({ searchTerm, users, onSelectionChange }: ClientsTable) {\n  const columns: GridColDef[] = [\n    {\n      field: 'nomeCliente',\n      headerName: 'Nome Cliente',\n      width: 150,\n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 200,\n    },\n    {\n      field: 'telefone',\n      headerName: 'Telefone',\n      width: 150,\n    },\n\n    {\n      field: 'tecResponsavel',\n      headerName: 'Técnico',\n      width: 150,\n    },\n    {\n      field: 'enderecoCliente',\n      headerName: 'Endereço',\n      width: 200,\n    },\n    {\n      field: 'cnpjCliente',\n      headerName: 'Cliente',\n      width: 200,\n    },\n    {\n      field: 'role',\n      headerName: 'Perfil',\n      width: 120,\n    },\n\n    {\n      field: 'tipoDoLocal',\n      headerName: 'Tipo do Local',\n      width: 150,\n    },\n  ]\n  const [page, setPage] = useState(0)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [selectedRows, setSelectionModel] = useState<GridRowId[]>([])\n  const [rowsData, setRowsData] = useState(users)\n\n  const handleRowSelection = ({\n    selectionModel,\n  }: GridSelectionModelChangeParams) => {\n    setSelectionModel(selectionModel)\n    onSelectionChange(selectionModel);\n  }\n\n  const handleEditRowModelChange = useCallback(\n    ({ model }: GridEditRowModelParams) => {\n      // console.log('model: ', model)\n      console.log('')\n    },\n    []\n  )\n\n  // const filterRows = () => {\n  //   setRowsData(\n  //     searchTerm === '' ? users : users.filter((row) =>\n  //       row.nomeCliente.toLowerCase().includes(searchTerm.toLowerCase())\n  //     )\n  //   )\n  // }\n\n  const handleChangePage = ({ page }: GridPageChangeParams) => {\n    setPage(page)\n  }\n\n  const handleChangeRowsPerPage = ({ pageSize }: GridPageChangeParams) => {\n    setRowsPerPage(pageSize)\n    // setPage(0)\n  }\n\n  // useEffect(() => {\n  //   filterRows()\n  // }, [searchTerm, users])\n\n  return (\n    <div style={{ height: '80vh', width: '100%', marginTop: '10px' }}>\n      <DataGrid\n        // disableColumnFilter\n        onSelectionModelChange={handleRowSelection}\n        onEditRowModelChange={handleEditRowModelChange}\n        rows={users.filter((row) =>\n          row.nomeCliente.toLowerCase().includes(searchTerm.toLowerCase())\n        )}\n        columns={columns}\n        checkboxSelection\n        disableSelectionOnClick\n        rowsPerPageOptions={[10, 25, 50, 100]}\n        pageSize={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onPageSizeChange={handleChangeRowsPerPage}\n\n        localeText={{\n          footerRowSelected: (count) => {\n            return count > 1 ? `${count} Linhas Selecionada` : `${count} Linha Selecionada`\n          }\n        }}\n        componentsProps={{\n          pagination: {\n            labelRowsPerPage: \"Linhas por Página\",\n          }\n        }}\n      />\n    </div>\n  )\n}\n","import styled from '@emotion/styled'\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n  flex: 1;\n  margin-right: 20px;\n\n  input {\n    width: 100%;\n    padding: 16px;\n    padding-right: 40px;\n    background-color: transparent;\n    font-size: 16px;\n    line-height: 24px;\n    letter-spacing: 0.15px;\n    color: rgba(0, 0, 0, 0.87);\n    outline: 0;\n    transition: 0.5s;\n    border-radius: 6px;\n    border: 1px solid #6200ee;\n\n    &:focus,\n    :focus-visible {\n      ~ .activeBorder {\n        opacity: 1;\n      }\n    }\n  }\n\n  .activeBorder {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%);\n    border: 2px solid #6200ee;\n    opacity: 0;\n    transition: 0.5s;\n    z-index: 5;\n    width: 100%;\n    height: 100%;\n    background: transparent;\n    display: block;\n    pointer-events: none;\n    border-radius: 6px;\n  }\n\n  legend {\n    font-size: 12px;\n    line-height: 16px;\n    letter-spacing: 0.4px;\n    color: #6200ee;\n    position: absolute;\n    top: -6px;\n    left: 16px;\n    background-color: #ffffff;\n    z-index: 10;\n  }\n\n  svg {\n    position: absolute;\n    top: 50%;\n    right: 0;\n    transform: translate(-50%, -50%);\n  }\n`\n","import { Dispatch, HTMLProps, SetStateAction } from 'react'\nimport { Container } from './styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { DebounceInput } from 'react-debounce-input'\n\ninterface InputProps extends Omit<HTMLProps<HTMLInputElement>, 'ref'> {\n  legendText: string\n  inputValue: string\n  setInputValue: Dispatch<SetStateAction<string>>\n}\n\nexport const Input = ({\n  inputValue,\n  setInputValue,\n  legendText,\n  ...rest\n}: InputProps) => {\n  return (\n    <Container>\n      <legend>{legendText}</legend>\n      <DebounceInput\n        {...rest}\n        debounceTimeout={400}\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <span className='activeBorder' />\n      <SearchIcon />\n    </Container>\n  )\n}\n","import styled from '@emotion/styled'\ninterface ButtonProps {\n  isActive?: boolean\n}\n\nexport const Button = styled.button<ButtonProps>`\n  background-color: #1a73e8;\n  border-radius: 500px;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: #ffffff;\n  border: none;\n  padding: 8px 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  position: relative;\n\n  > svg {\n    margin-right: 6px;\n  }\n\n  > nav {\n    transform: ${({ isActive }) => (isActive ? 'scale(1)' : 'scale(0)')};\n    opacity: ${({ isActive }) => (isActive ? 1 : 0)};\n    visibility: ${({ isActive }) => (isActive ? 'visible' : 'hidden')};\n    pointer-events: ${({ isActive }) => (isActive ? 'all' : 'none')};\n  }\n`\n\nexport const ItemsList = styled.nav`\n  display: flex;\n  flex-direction: column;\n  background: #ffffff;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.25);\n  padding: 8px 18px;\n  position: absolute;\n  z-index: 10;\n  width: 100%;\n  left: 0;\n  top: 100%;\n  transition: 0.25s;\n\n  button {\n    font-size: 14px;\n    line-height: 20px;\n    letter-spacing: 0.25px;\n    color: #000000;\n    background: transparent;\n    border: none;\n    cursor: pointer;\n    text-align: left;\n    margin: 10px 0;\n  }\n`\n","import {\n  Box,\n  Container,\n  createStyles,\n  makeStyles,\n  Theme,\n  Grid,\n  LinearProgress,\n  Modal,\n  TextField,\n  Typography,\n  MenuItem,\n  Snackbar,\n  Button as MuiButton\n} from '@material-ui/core'\nimport { Alert, AlertTitle } from '@material-ui/lab'\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\nimport ClientsTable from '../../../components/private/ClientsTable'\nimport { Input } from '../../../components/private/Input'\nimport { Button, ItemsList } from './styles'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\nimport api from '../../../config/api'\nimport './style.css'\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n};\n\ninterface User {\n  id: number,\n  nomeCliente: string,\n  email: string,\n  cnpjCliente: string,\n  tecResponsavel: string,\n  enderecoCliente: string,\n  tipoDoLocal: string,\n  role: string,\n  telefone: string,\n  codUsuario: string,\n  dataCad: string\n}\n\nexport function ManageUsers() {\n  const classes = useStyles()\n  const role = localStorage.getItem('role')\n  const { container } = useStyles()\n  const [inputValue, setInputValue] = useState('')\n  const [isActionsOpened, setIsActionsOpened] = useState(false)\n  const [openCreate, setCreateModalOpen] = useState(false)\n  const [editOpen, setEditModalOpen] = useState(false)\n  const [users, setUsers] = useState([])\n  const [selectedRows, setSelectedRows] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const { push } = useHistory()\n  const [message, setMessage] = useState('')\n  const [msgType, setMsgType] = useState(0)\n\n  const handleToggleActionsOpened = (state: boolean) => {\n    setIsActionsOpened(state)\n  }\n\n  const handleCreate = () => {\n    setCreateModalOpen(true)\n  }\n\n  const handleEdit = () => {\n    if (selectedRows.length == 1) {\n      const editUser = users.find(user => user.id == selectedRows[0])\n      editForm.setValues(editUser)\n      setEditModalOpen(true)\n    } else {\n      setMsgType(2)\n      // setMessage('Select only one user')\n      setMessage('Escolha um Usuário apenas.')\n    }\n  }\n\n  const handleViewReport = () => {\n    if (selectedRows.length == 1) {\n      const reportUser = users.find(user => user.id == selectedRows[0])\n      localStorage.setItem('code', reportUser.id)\n      push('/dashboard')\n    } else {\n      setMsgType(2)\n      // setMessage('Select only one user')\n      setMessage('Escolha um Usuário apenas.')\n    }\n  }\n\n  const handleDelete = () => {\n    if (selectedRows.length >= 1) {\n      if (confirm(\"Do you want to delete these values?\")) {\n        api\n          .post('/user/delete', selectedRows)\n          .then((result) => {\n            if (result.status === 200) {\n              setMsgType(1)\n              // setMessage('Delete user success')\n              setMessage('Usuário apagado com sucesso.')\n              getUserData()\n            }\n          })\n          .catch((err) => {\n            console.log(err)\n            setMsgType(2)\n            setMessage(err)\n          })\n          .finally(() => {\n            setEditModalOpen(false)\n            setIsLoading(false)\n          })\n      }\n    } else {\n      setMsgType(2)\n      // setMessage('Please select user')\n      setMessage('Por favor escolha um Usuário')\n    }\n  }\n\n  const validationSchema = yup.object({\n    nomeCliente: yup.string().required('O Primeiro nome é obrigatório'),\n    email: yup\n      .string()\n      .email('insira um E-mail válido')\n      .required('E-mail é obrigatório'),\n    password: yup\n      .string()\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        'A senha deve conter 8 caracteres sendo 1 maiúsculo, 1 numérico e 1 caractere especial'\n      ),\n    confirmPassword: yup\n      .string()\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        'A senha deve conter 8 caracteres sendo 1 maiúsculo, 1 numérico e 1 caractere especial'\n      )\n      .test('match', 'as senhas não batem', function (confirmPassword) {\n        return confirmPassword === this.parent.password\n      }),\n  })\n\n  const editValidationSchema = yup.object({\n    nomeCliente: yup.string().required('O Primeiro nome é obrigatório'),\n    email: yup\n      .string()\n      .email('insira um E-mail válido')\n      .required('E-mail é obrigatório'),\n  })\n\n  const createSubmit = (values) => {\n    delete values.confirmPassword\n    api\n      .post('/user/create', values)\n      .then((result) => {\n        if (result.status === 200) {\n          getUserData()\n          setMsgType(1)\n          // setMessage('Create user success')\n          setMessage('Usuário criado com sucesso')\n        }\n      })\n      .catch((err) => {\n        setMsgType(2)\n        setMessage(err)\n        console.log(err)\n      })\n      .finally(() => {\n        setCreateModalOpen(false)\n        setIsLoading(false)\n      })\n  }\n\n  const editSubmit = (values) => {\n    api\n      .post('/user/edit', values)\n      .then((result) => {\n        if (result.status === 200) {\n          getUserData()\n          setMsgType(1)\n          // setMessage('Edit user success')\n          setMessage('Usuário editado com sucesso')\n        }\n      })\n      .catch((err) => {\n        setMsgType(1)\n        setMessage(err)\n        console.log(err)\n      })\n      .finally(() => {\n        setEditModalOpen(false)\n        setIsLoading(false)\n      })\n  }\n\n  const createForm = useFormik({\n    initialValues: {\n      nomeCliente: '',\n      email: '',\n      telefone: '',\n      tecResponsavel: '',\n      enderecoCliente: '',\n      cnpjCliente: '',\n      role: 'Cliente',\n      tipoDoLocal: '',\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema,\n    onSubmit: values => {\n      createSubmit(values);\n    },\n  })\n\n  const editForm = useFormik({\n    initialValues: {\n      cnpjCliente: \"\",\n      email: \"\",\n      enderecoCliente: \"\",\n      id: 1004,\n      nomeCliente: \"\",\n      role: \"\",\n      tecResponsavel: \"\",\n      telefone: \"\",\n      tipoDoLocal: \"\",\n    },\n    validationSchema,\n    onSubmit: values => {\n      editSubmit(values);\n    },\n  })\n\n  const getUserData = () => {\n    api\n      .post('/user/all')\n      .then((result) => {\n        if (result.status === 200) {\n          const rusers: any[] = [];\n          result.data.map((user: any) => rusers.push({ id: user.codCliente, nomeCliente: user.nomeCliente, cnpjCliente: user.cnpjCliente, tecResponsavel: user.tecResponsavel, enderecoCliente: user.enderecoCliente, tipoDoLocal: user.tipoDoLocal, email: user.email, role: user.role, telefone: user.telefone, codUsuario: user.codUsuario, dataCad: user.dataCad }))\n          setUsers(rusers)\n        }\n      })\n      .catch((err) => console.log(err))\n      .finally(() => console.log('finally'))\n  }\n\n  const handleChangeSelection = model => {\n    setSelectedRows(model)\n  }\n\n  useEffect(() => {\n    getUserData()\n    return () => {\n      console.log(\"Will Un Mount\")\n    }\n  }, []);\n  return (\n    <Container maxWidth='lg' className={container}>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={msgType > 0}\n        autoHideDuration={3000}\n        onClose={() => {\n          setMsgType(0)\n        }}\n      >\n        {\n          msgType === 1 ? <Alert onClose={() => {\n            setMsgType(0)\n          }} variant='filled' severity='success'>\n            {message}\n          </Alert> : (msgType === 2 && <Alert onClose={() => {\n            setMsgType(0)\n          }} variant='filled' severity='error'>\n            {message}\n          </Alert>)\n        }\n      </Snackbar>\n      {isLoading ? <LinearProgress classes={{ colorPrimary: classes.colorPrimary, barColorPrimary: classes.barColorPrimary }} /> : <></>}\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6} sm={6} >\n          <Input\n            inputValue={inputValue}\n            setInputValue={setInputValue}\n            placeholder='Digite um nome...'\n            legendText='Procurar'\n          />\n        </Grid>\n        <Grid item xs={12} md={6} sm={6} >\n          <Box display='flex' alignItems='center' justifyContent='flex-end' style={{ marginTop: '10px' }}>\n            {role === 'Admin' && <Button onClick={e => handleCreate()} style={{ backgroundColor: '#1f497d', marginLeft: '10px' }}>Criar</Button>}\n            {role === 'Admin' && <Button onClick={e => handleEdit()} style={{ backgroundColor: '#1f497d', marginLeft: '10px' }}>Editar</Button>}\n            {role === 'Admin' && <Button onClick={e => handleDelete()} style={{ backgroundColor: '#1f497d', marginLeft: '10px' }}>Apagar</Button>}\n            <Button onClick={e => handleViewReport()} style={{ backgroundColor: '#1f497d', marginLeft: '10px' }}>Relatorio</Button>\n          </Box>\n        </Grid>\n      </Grid>\n\n      <Modal\n        open={openCreate}\n        className={classes.modal}\n        onClose={() => setCreateModalOpen(false)}\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n      >\n        <Box\n          style={{\n            width: 500,\n            backgroundColor: '#FFFFFF',\n            padding: '20px',\n            overflowY: 'auto'\n          }}>\n          <form method='post' onSubmit={createForm.handleSubmit} style={{ height: '450px' }}>\n            <Typography style={{ textAlign: 'center' }}><h2>Criar novo Usuário</h2></Typography>\n            <TextField\n              fullWidth\n              id='nomeCliente'\n              name='nomeCliente'\n              label='Nome Cliente'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={createForm.values.nomeCliente}\n              onChange={createForm.handleChange}\n              error={createForm.touched.nomeCliente && Boolean(createForm.errors.nomeCliente)}\n              helperText={createForm.touched.nomeCliente && createForm.errors.nomeCliente}\n            />\n            <TextField\n              fullWidth\n              id='email'\n              name='email'\n              label='Email'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={createForm.values.email}\n              onChange={createForm.handleChange}\n              error={createForm.touched.email && Boolean(createForm.errors.email)}\n              helperText={createForm.touched.email && createForm.errors.email}\n            />\n            <TextField\n              fullWidth\n              id='telefone'\n              name='telefone'\n              label='Telefone'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={createForm.values.telefone}\n              onChange={createForm.handleChange}\n              error={createForm.touched.telefone && Boolean(createForm.errors.telefone)}\n              helperText={createForm.touched.telefone && createForm.errors.telefone}\n            />\n            <TextField\n              fullWidth\n              id='tecResponsavel'\n              name='tecResponsavel'\n              label='Técnico Responsável'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={createForm.values.tecResponsavel}\n              onChange={createForm.handleChange}\n              error={createForm.touched.tecResponsavel && Boolean(createForm.errors.tecResponsavel)}\n              helperText={createForm.touched.tecResponsavel && createForm.errors.tecResponsavel}\n            />\n            <TextField\n              fullWidth\n              id='enderecoCliente'\n              name='enderecoCliente'\n              label='Endereço'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={createForm.values.enderecoCliente}\n              onChange={createForm.handleChange}\n              error={createForm.touched.enderecoCliente && Boolean(createForm.errors.enderecoCliente)}\n              helperText={createForm.touched.enderecoCliente && createForm.errors.enderecoCliente}\n            />\n            <TextField\n              fullWidth\n              id='cnpjCliente'\n              name='cnpjCliente'\n              label='CNPJ Cliente'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={createForm.values.cnpjCliente}\n              onChange={createForm.handleChange}\n              error={createForm.touched.cnpjCliente && Boolean(createForm.errors.cnpjCliente)}\n              helperText={createForm.touched.cnpjCliente && createForm.errors.cnpjCliente}\n            />\n            <TextField\n              id='role'\n              name='role'\n              label='Perfil'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={createForm.values.role}\n              onChange={createForm.handleChange} fullWidth select>\n              <MenuItem value=\"Cliente\">Cliente</MenuItem>\n              <MenuItem value=\"Supervisor\">Supervisor</MenuItem>\n              <MenuItem value=\"Admin\">Admin</MenuItem>\n            </TextField>\n            <TextField\n              fullWidth\n              id='tipoDoLocal'\n              name='tipoDoLocal'\n              label='Tipo do Local'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={createForm.values.tipoDoLocal}\n              onChange={createForm.handleChange}\n              error={createForm.touched.tipoDoLocal && Boolean(createForm.errors.tipoDoLocal)}\n              helperText={createForm.touched.tipoDoLocal && createForm.errors.tipoDoLocal}\n            />\n\n            <TextField\n              fullWidth\n              id='password'\n              name='password'\n              label='Senha'\n              type='password'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={createForm.values.password}\n              onChange={createForm.handleChange}\n              error={createForm.touched.password && Boolean(createForm.errors.password)}\n              helperText={createForm.touched.password && createForm.errors.password}\n            />\n            <TextField\n              fullWidth\n              id='confirmPassword'\n              name='confirmPassword'\n              label='Confirmar Senha'\n              type='password'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={createForm.values.confirmPassword}\n              onChange={createForm.handleChange}\n              error={\n                createForm.touched.confirmPassword &&\n                Boolean(createForm.errors.confirmPassword)\n              }\n              helperText={\n                createForm.touched.confirmPassword && createForm.errors.confirmPassword\n              }\n            />\n            <MuiButton type=\"submit\" className=\"mb-5\" variant=\"contained\" color=\"primary\" style={{ width: '100%', marginBottom: '30px', backgroundColor: '#1f497d' }}>\n              Criar\n            </MuiButton>\n          </form>\n        </Box>\n      </Modal>\n\n      <Modal\n        open={editOpen}\n        className={classes.modal}\n        onClose={() => setEditModalOpen(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box\n          style={{\n            width: 500,\n            backgroundColor: '#FFFFFF',\n            padding: '20px',\n            overflowY: 'auto'\n          }}>\n          <form onSubmit={editForm.handleSubmit} style={{ height: '450px' }}>\n            <Typography style={{ textAlign: 'center' }}><h2>Editar Usuário</h2></Typography>\n            <TextField\n              fullWidth\n              id='nomeCliente'\n              name='nomeCliente'\n              label='Nome Cliente'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={editForm.values.nomeCliente}\n              onChange={editForm.handleChange}\n              error={editForm.touched.nomeCliente && Boolean(editForm.errors.nomeCliente)}\n              helperText={editForm.touched.nomeCliente && editForm.errors.nomeCliente}\n            />\n            <TextField\n              fullWidth\n              id='email'\n              name='email'\n              label='Email'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={editForm.values.email}\n              onChange={editForm.handleChange}\n              error={editForm.touched.email && Boolean(editForm.errors.email)}\n              helperText={editForm.touched.email && editForm.errors.email}\n            />\n            <TextField\n              fullWidth\n              id='telefone'\n              name='telefone'\n              label='Telefone'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={editForm.values.telefone}\n              onChange={editForm.handleChange}\n              error={editForm.touched.telefone && Boolean(editForm.errors.telefone)}\n              helperText={editForm.touched.telefone && editForm.errors.telefone}\n            />\n            <TextField\n              fullWidth\n              id='tecResponsavel'\n              name='tecResponsavel'\n              label='Técnico Responsável'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={editForm.values.tecResponsavel}\n              onChange={editForm.handleChange}\n              error={editForm.touched.tecResponsavel && Boolean(editForm.errors.tecResponsavel)}\n              helperText={editForm.touched.tecResponsavel && editForm.errors.tecResponsavel}\n            />\n            <TextField\n              fullWidth\n              id='enderecoCliente'\n              name='enderecoCliente'\n              label='Endereço'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={editForm.values.enderecoCliente}\n              onChange={editForm.handleChange}\n              error={editForm.touched.enderecoCliente && Boolean(editForm.errors.enderecoCliente)}\n              helperText={editForm.touched.enderecoCliente && editForm.errors.enderecoCliente}\n            />\n            <TextField\n              fullWidth\n              id='cnpjCliente'\n              name='cnpjCliente'\n              label='CNPJ Cliente'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={editForm.values.cnpjCliente}\n              onChange={editForm.handleChange}\n              error={editForm.touched.cnpjCliente && Boolean(editForm.errors.cnpjCliente)}\n              helperText={editForm.touched.cnpjCliente && editForm.errors.cnpjCliente}\n            />\n            <TextField id='role'\n              name='role'\n              label='Perfil' variant='outlined' color='secondary'\n              className={classes.input}\n              value={editForm.values.role}\n              onChange={editForm.handleChange} fullWidth select>\n              <MenuItem value=\"Cliente\">Cliente</MenuItem>\n              <MenuItem value=\"Supervisor\">Supervisor</MenuItem>\n              <MenuItem value=\"Admin\">Admin</MenuItem>\n            </TextField>\n            <TextField\n              fullWidth\n              id='tipoDoLocal'\n              name='tipoDoLocal'\n              label='Tipo do Local'\n              variant='outlined'\n              color='secondary'\n              className={classes.input}\n              value={editForm.values.tipoDoLocal}\n              onChange={editForm.handleChange}\n              error={editForm.touched.tipoDoLocal && Boolean(editForm.errors.tipoDoLocal)}\n              helperText={editForm.touched.tipoDoLocal && editForm.errors.tipoDoLocal}\n            />\n\n            <MuiButton type=\"submit\" className=\"mb-5\" variant=\"contained\" color=\"primary\" style={{ width: '100%', marginBottom: '30px', backgroundColor: '#1f497d' }}>\n              Editar\n            </MuiButton>\n          </form>\n        </Box>\n      </Modal>\n      <ClientsTable searchTerm={inputValue} users={users} onSelectionChange={handleChangeSelection} />\n    </Container>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      paddingTop: theme.spacing(2),\n    },\n    colorPrimary: {\n      backgroundColor: '#1f497d',\n    },\n    barColorPrimary: {\n      backgroundColor: '#ffffff',\n    },\n    root: {\n      display: 'flex',\n      width: '100%',\n    },\n    form: {\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1,\n    },\n    input: {\n      marginBottom: theme.spacing(2),\n    },\n    forgotLink: {\n      textAlign: 'right',\n    },\n    submitBtn: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    divider: {\n      display: 'flex',\n      textAlign: 'center',\n      '&>span': {\n        marginBottom: 3.5,\n        color: '#aaa',\n      },\n      '&::after': {\n        content: '\"\"',\n        alignSelf: 'center',\n        flexGrow: 1,\n        backgroundColor: '#ccc',\n        height: 1,\n        marginBottom: 3,\n        marginLeft: theme.spacing(2),\n      },\n      '&::before': {\n        content: '\"\"',\n        alignSelf: 'center',\n        flexGrow: 1,\n        backgroundColor: '#ccc',\n        height: 1,\n        marginRight: theme.spacing(2),\n        marginBottom: 3,\n      },\n    },\n    icon: {\n      color: '#fff',\n      marginRight: theme.spacing(1.5),\n    },\n    paddingLeft: {\n      paddingLeft: theme.spacing(1),\n    },\n    paddingRight: {\n      paddingRight: theme.spacing(1),\n    },\n    facebookButton: {\n      background: '#1479BD',\n    },\n    googleButton: {\n      background: '#DD4B38',\n    },\n    containerModal: {},\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n)","import {\n  Box,\n  Grid,\n  Container,\n  createStyles,\n  makeStyles,\n  Theme,\n  LinearProgress,\n  Modal,\n  TextField,\n  Typography,\n  MenuItem,\n  Snackbar,\n  Button as MuiButton\n} from '@material-ui/core'\nimport { Alert, AlertTitle } from '@material-ui/lab'\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\nimport api from '../../../config/api'\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n};\n\ninterface User {\n  id: number,\n  nomeCliente: string,\n  email: string,\n  cnpjCliente: string,\n  tecResponsavel: string,\n  enderecoCliente: string,\n  tipoDoLocal: string,\n  role: string,\n  telefone: string,\n  codUsuario: string,\n  dataCad: string\n}\n\nexport function Client() {\n  const classes = useStyles()\n  const user = JSON.parse(localStorage.getItem('user'))\n  const { container } = useStyles()\n  // const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n  const [isLoading, setIsLoading] = useState(false)\n  const { push } = useHistory()\n  const [message, setMessage] = useState('')\n  const [msgType, setMsgType] = useState(0)\n\n\n  const validationSchema = yup.object({\n    currentPassword: yup.string(),\n    newPassword: yup\n      .string()\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        'A senha deve conter 8 caracteres sendo 1 maiúsculo, 1 numérico e 1 caractere especial'\n      ),\n    confirmPassword: yup\n      .string()\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        'A senha deve conter 8 caracteres sendo 1 maiúsculo, 1 numérico e 1 caractere especial'\n      )\n      .test('match', 'as senhas não batem', function (confirmPassword) {\n        return confirmPassword === this.parent.newPassword\n      }),\n  })\n\n\n  const updatePassword = (values) => {\n    setIsLoading(true)\n    // delete values.confirmPassword\n    api\n      .post('/user/password', values)\n      .then((result) => {\n        if (result.status === 200) {\n          setMsgType(1)\n          // Password Changed\n          setMessage('Senha Atualizada.')\n        }\n      })\n      .catch((err) => {\n        setMsgType(2)\n        // Invaild Password\n        setMessage(\"Senha invalida.\")\n      })\n      .finally(() => {\n        setIsLoading(false)\n      })\n  }\n\n  const editSubmit = (values) => {\n    setIsLoading(false)\n    api\n      .post('/user/edit', values)\n      .then((result) => {\n        if (result.status === 200) {\n          localStorage.setItem(\"user\", JSON.stringify(result.data))\n          setMsgType(1)\n          // Edit user success\n          setMessage('Usuário actualizado com sucesso.')\n        }\n      })\n      .catch((err) => {\n        setMsgType(2)\n        // setMessage(\"Invalid Info\")\n        setMessage(\"Informação invalida.\")\n      })\n      .finally(() => {\n        setIsLoading(false)\n      })\n  }\n\n  const passwordForm = useFormik({\n    initialValues: {\n      codCliente: user.codCliente,\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: '',\n    },\n    validationSchema,\n    onSubmit: values => {\n      updatePassword(values);\n    },\n  })\n\n  const editForm = useFormik({\n    initialValues: {\n      cnpjCliente: user.cnpjCliente,\n      email: user.email,\n      enderecoCliente: user.enderecoCliente,\n      id: user.id,\n      nomeCliente: user.nomeCliente,\n      role: user.role,\n      tecResponsavel: user.tecResponsavel,\n      telefone: user.telefone,\n      tipoDoLocal: user.tipoDoLocal,\n    },\n    // initialValues: user,\n    validationSchema,\n    onSubmit: values => {\n      editSubmit(values);\n    },\n  })\n\n  return (\n    <Container maxWidth='lg' className={container}>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={msgType > 0}\n        autoHideDuration={3000}\n        onClose={() => {\n          setMsgType(0)\n        }}\n      >\n        {\n          msgType === 1 ? <Alert onClose={() => {\n            setMsgType(0)\n          }} variant='filled' severity='success'>\n            {message}\n          </Alert> : (msgType === 2 && <Alert onClose={() => {\n            setMsgType(0)\n          }} variant='filled' severity='error'>\n            {message}\n          </Alert>)\n        }\n      </Snackbar>\n      {isLoading ? <LinearProgress classes={{ colorPrimary: classes.colorPrimary, barColorPrimary: classes.barColorPrimary }} /> : <></>}\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6} sm={12}>\n          <Box\n            className=\"col-md-6\"\n            style={{\n              backgroundColor: '#FFFFFF',\n              padding: '20px',\n            }}>\n            <form method='post' onSubmit={editForm.handleSubmit}>\n              <Typography style={{ textAlign: 'center' }}><h2>Editar Usuário</h2></Typography>\n              <TextField\n                fullWidth\n                id='nomeCliente'\n                name='nomeCliente'\n                label='Nome Cliente'\n                variant='outlined'\n                color='secondary'\n                className={classes.input}\n                value={editForm.values.nomeCliente}\n                onChange={editForm.handleChange}\n                error={editForm.touched.nomeCliente && Boolean(editForm.errors.nomeCliente)}\n                helperText={editForm.touched.nomeCliente && editForm.errors.nomeCliente}\n              />\n              <TextField\n                fullWidth\n                id='email'\n                name='email'\n                label='Email'\n                variant='outlined'\n                color='secondary'\n                className={classes.input}\n                value={editForm.values.email}\n                onChange={editForm.handleChange}\n                error={editForm.touched.email && Boolean(editForm.errors.email)}\n                helperText={editForm.touched.email && editForm.errors.email}\n              />\n              <TextField\n                fullWidth\n                id='telefone'\n                name='telefone'\n                label='Telefone'\n                variant='outlined'\n                color='secondary'\n                className={classes.input}\n                value={editForm.values.telefone}\n                onChange={editForm.handleChange}\n                error={editForm.touched.telefone && Boolean(editForm.errors.telefone)}\n                helperText={editForm.touched.telefone && editForm.errors.telefone}\n              />\n              <TextField\n                fullWidth\n                id='tecResponsavel'\n                name='tecResponsavel'\n                label='Técnico Responsável'\n                variant='outlined'\n                color='secondary'\n                className={classes.input}\n                value={editForm.values.tecResponsavel}\n                onChange={editForm.handleChange}\n                error={editForm.touched.tecResponsavel && Boolean(editForm.errors.tecResponsavel)}\n                helperText={editForm.touched.tecResponsavel && editForm.errors.tecResponsavel}\n              />\n              <TextField\n                fullWidth\n                id='enderecoCliente'\n                name='enderecoCliente'\n                label='Endereço'\n                variant='outlined'\n                color='secondary'\n                className={classes.input}\n                value={editForm.values.enderecoCliente}\n                onChange={editForm.handleChange}\n                error={editForm.touched.enderecoCliente && Boolean(editForm.errors.enderecoCliente)}\n                helperText={editForm.touched.enderecoCliente && editForm.errors.enderecoCliente}\n              />\n              <TextField\n                fullWidth\n                id='cnpjCliente'\n                name='cnpjCliente'\n                label='CNPJ Cliente'\n                variant='outlined'\n                color='secondary'\n                className={classes.input}\n                value={editForm.values.cnpjCliente}\n                onChange={editForm.handleChange}\n                error={editForm.touched.cnpjCliente && Boolean(editForm.errors.cnpjCliente)}\n                helperText={editForm.touched.cnpjCliente && editForm.errors.cnpjCliente}\n              />\n              <TextField id='role'\n                name='role'\n                label='Perfil' variant='outlined' color='secondary'\n                className={classes.input}\n                value={editForm.values.role}\n                disabled\n                onChange={editForm.handleChange} fullWidth select>\n                <MenuItem value=\"Cliente\">Cliente</MenuItem>\n                <MenuItem value=\"Supervisor\">Supervisor</MenuItem>\n                <MenuItem value=\"Admin\">Admin</MenuItem>\n              </TextField>\n              <TextField\n                fullWidth\n                id='tipoDoLocal'\n                name='tipoDoLocal'\n                label='Tipo do Local'\n                variant='outlined'\n                color='secondary'\n                className={classes.input}\n                value={editForm.values.tipoDoLocal}\n                onChange={editForm.handleChange}\n                error={editForm.touched.tipoDoLocal && Boolean(editForm.errors.tipoDoLocal)}\n                helperText={editForm.touched.tipoDoLocal && editForm.errors.tipoDoLocal}\n              />\n              <MuiButton type=\"submit\" className=\"mb-5\" variant=\"contained\" color=\"primary\" style={{ backgroundColor: '#1f497d', width: '100%', marginBottom: '30px' }}>\n                Atualizar\n              </MuiButton>\n            </form>\n          </Box>\n        </Grid>\n        <Grid item xs={12} md={6} sm={12}>\n          <Box\n            className=\"col-md-6\"\n            style={{\n              backgroundColor: '#FFFFFF',\n              padding: '20px',\n              height: '400px'\n            }}>\n            <form method='post' onSubmit={passwordForm.handleSubmit}>\n              <Typography style={{ textAlign: 'center' }}><h2>Atualizar Senha</h2></Typography>\n              <TextField\n                fullWidth\n                id='currentPassword'\n                name='currentPassword'\n                label='Senha Atual'\n                type='password'\n                variant='outlined'\n                color='secondary'\n                className={classes.input}\n                value={passwordForm.values.currentPassword}\n                onChange={passwordForm.handleChange}\n                error={passwordForm.touched.currentPassword && Boolean(passwordForm.errors.currentPassword)}\n                helperText={passwordForm.touched.currentPassword && passwordForm.errors.currentPassword}\n              />\n              <TextField\n                fullWidth\n                id='newPassword'\n                name='newPassword'\n                label='Nova Senha'\n                type='password'\n                variant='outlined'\n                color='secondary'\n                className={classes.input}\n                value={passwordForm.values.newPassword}\n                onChange={passwordForm.handleChange}\n                error={passwordForm.touched.newPassword && Boolean(passwordForm.errors.newPassword)}\n                helperText={passwordForm.touched.newPassword && passwordForm.errors.newPassword}\n              />\n              <TextField\n                fullWidth\n                id='confirmPassword'\n                name='confirmPassword'\n                label='Digite a nova senha novamente'\n                type='password'\n                variant='outlined'\n                color='secondary'\n                className={classes.input}\n                value={passwordForm.values.confirmPassword}\n                onChange={passwordForm.handleChange}\n                error={\n                  passwordForm.touched.confirmPassword &&\n                  Boolean(passwordForm.errors.confirmPassword)\n                }\n                helperText={\n                  passwordForm.touched.confirmPassword && passwordForm.errors.confirmPassword\n                }\n              />\n              <MuiButton type=\"submit\" className=\"mb-5\" variant=\"contained\" color=\"primary\" style={{ backgroundColor: '#1f497d', width: '100%', marginBottom: '30px' }}>\n                Atualizar\n              </MuiButton>\n            </form>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      paddingTop: theme.spacing(2),\n    },\n    root: {\n      display: 'flex',\n      width: '100%',\n    },\n    form: {\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1,\n    },\n    input: {\n      marginBottom: theme.spacing(2),\n    },\n    forgotLink: {\n      textAlign: 'right',\n    },\n    submitBtn: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    divider: {\n      display: 'flex',\n      textAlign: 'center',\n      '&>span': {\n        marginBottom: 3.5,\n        color: '#aaa',\n      },\n      '&::after': {\n        content: '\"\"',\n        alignSelf: 'center',\n        flexGrow: 1,\n        backgroundColor: '#ccc',\n        height: 1,\n        marginBottom: 3,\n        marginLeft: theme.spacing(2),\n      },\n      '&::before': {\n        content: '\"\"',\n        alignSelf: 'center',\n        flexGrow: 1,\n        backgroundColor: '#ccc',\n        height: 1,\n        marginRight: theme.spacing(2),\n        marginBottom: 3,\n      },\n    },\n    icon: {\n      color: '#fff',\n      marginRight: theme.spacing(1.5),\n    },\n    paddingLeft: {\n      paddingLeft: theme.spacing(1),\n    },\n    paddingRight: {\n      paddingRight: theme.spacing(1),\n    },\n    facebookButton: {\n      background: '#1479BD',\n    },\n    googleButton: {\n      background: '#DD4B38',\n    },\n    modal: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignContent: 'center',\n      width: 412,\n      height: 315,\n      backgroundColor: '#fafafa',\n      transform: 'translate(-50%, -50%)',\n    },\n    containerModal: {},\n    colorPrimary: {\n      backgroundColor: '#1f497d',\n    },\n    barColorPrimary: {\n      backgroundColor: '#ffffff',\n    },\n  })\n)","import {\r\n  createStyles,\r\n  Icon,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n} from '@material-ui/core'\r\nimport { Dashboard, People, Person, ExitToApp } from '@material-ui/icons'\r\nimport clsx from 'clsx'\r\nimport { memo } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface ListProps {\r\n  pathname: string,\r\n  handleClose: (event: React.KeyboardEvent | React.MouseEvent) => void\r\n}\r\n\r\nfunction NavigationList({ pathname, handleClose }: ListProps) {\r\n  //const { removeToken, atobJSON } = useJWT()\r\n  const role = localStorage.getItem('role')\r\n  const { push } = useHistory()\r\n  const isUserAdmin = role === 'Admin'\r\n  const classes = useStyles()\r\n  const logout = () => {\r\n    localStorage.removeItem('role')\r\n    localStorage.removeItem('name')\r\n    localStorage.removeItem('code')\r\n    push('/entrar')\r\n  }\r\n  return (\r\n    <List>\r\n      <ListItem\r\n        button\r\n        onClick={handleClose}\r\n        component={Link}\r\n        to='/dashboard'\r\n        className={clsx([pathname === '/dashboard' && classes.isActive])}\r\n      >\r\n        <ListItemIcon>\r\n          <Dashboard />\r\n        </ListItemIcon>\r\n        <ListItemText primary='Dashboard' />\r\n      </ListItem>\r\n      {/* <ListItem\r\n        button\r\n        component={Link}\r\n        to='/relatorio'\r\n        className={clsx([pathname === '/relatorio' && classes.isActive])}\r\n      >\r\n        <ListItemIcon>\r\n          <Description />\r\n        </ListItemIcon>\r\n        <ListItemText primary='Relatórios' />\r\n      </ListItem> */}\r\n      {(role === 'Admin' || role === 'Supervisor') && (\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          onClick={handleClose}\r\n          to='/cadastros'\r\n          className={clsx([pathname === '/cadastros' && classes.isActive])}\r\n        >\r\n          <ListItemIcon>\r\n            <People />\r\n          </ListItemIcon>\r\n          <ListItemText primary='Gerenciar Cadastros' />\r\n        </ListItem>\r\n      )}\r\n      <ListItem button component={Link}\r\n        to='/client' onClick={handleClose}>\r\n        <ListItemIcon>\r\n          <Person />\r\n        </ListItemIcon>\r\n        <ListItemText primary='Editar Usuário' />\r\n      </ListItem>\r\n      <ListItem button onClick={e => logout()}>\r\n        <ListItemIcon>\r\n          <ExitToApp />\r\n        </ListItemIcon>\r\n        <ListItemText primary='Sair' />\r\n      </ListItem>\r\n    </List>\r\n  )\r\n}\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    isActive: {\r\n      backgroundColor: '#6200ee14',\r\n      color: '#6200EE',\r\n      '&>div.MuiListItemIcon-root > svg': { fill: '#6200EE' },\r\n    },\r\n  })\r\n)\r\n\r\nexport const MemoizedNavigationList = memo(NavigationList)\r\n","export default __webpack_public_path__ + \"static/media/avatar.98d79ab0.png\";","import { makeStyles, Theme, Typography } from '@material-ui/core'\r\nimport { createStyles } from '@material-ui/styles'\r\nimport { memo } from 'react'\r\nimport AvatarImageMock from '../../../../../assets/avatar.png'\r\n\r\nexport interface UserProps {\r\n  avatar?: string\r\n  name?: string\r\n  isUserAdmin?: boolean\r\n}\r\n\r\nconst User = ({\r\n  avatar,\r\n  name = 'Rogério Dantas',\r\n  isUserAdmin = true,\r\n}: UserProps) => {\r\n  const classes = useStyles()\r\n  const imageSource = avatar || AvatarImageMock\r\n  const myname = localStorage.getItem('name')\r\n  const role = localStorage.getItem('role')\r\n  return (\r\n    <div className={classes.container} style={{ backgroundColor: '#1f497d' }}>\r\n      <img src={imageSource} alt={name} style={{ height: '85px' }} />\r\n      <Typography variant='h6' align='center'>\r\n        {myname}\r\n        {isUserAdmin && (\r\n          <span>\r\n            <br /> ({role})\r\n          </span>\r\n        )}\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      height: '15rem',\r\n      flexDirection: 'column',\r\n      width: '280px',\r\n      gap: '1rem',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: '#fff',\r\n    },\r\n  })\r\n)\r\n\r\nexport const MemoizedUser = memo(User)\r\n","import { Drawer as NavigationDrawer } from '@material-ui/core/'\r\nimport { MemoizedNavigationList as List } from './list'\r\nimport { MemoizedUser as User } from './user'\r\n\r\nexport interface DrawerProps {\r\n  open: boolean\r\n  handleClose: (event: React.KeyboardEvent | React.MouseEvent) => void\r\n  pathname?: string\r\n}\r\n\r\nexport function Drawer({\r\n  open,\r\n  handleClose,\r\n  pathname = '/dashboard',\r\n}: DrawerProps) {\r\n  return (\r\n    <NavigationDrawer anchor='left' open={open} onClose={handleClose}>\r\n      <User />\r\n      <List pathname={pathname} handleClose={handleClose} />\r\n    </NavigationDrawer>\r\n  )\r\n}\r\n","var _path, _path2, _path3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 58,\n    height: 24,\n    viewBox: \"0 0 58 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.55661 13.9238C8.55661 13.5488 8.4238 13.2597 8.15817 13.0566C7.89645 12.8535 7.42184 12.6484 6.73434 12.4413C6.04684 12.2343 5.49997 12.0038 5.09372 11.7499C4.31637 11.2617 3.9277 10.6249 3.9277 9.83978C3.9277 9.15228 4.207 8.58588 4.76559 8.14056C5.32809 7.69525 6.05661 7.4726 6.95114 7.4726C7.54489 7.4726 8.07419 7.58197 8.53903 7.80072C9.00387 8.01947 9.36911 8.33197 9.63473 8.73822C9.90036 9.14056 10.0332 9.58783 10.0332 10.08H8.55661C8.55661 9.6347 8.41598 9.28705 8.13473 9.03705C7.85739 8.78314 7.45895 8.65619 6.93942 8.65619C6.45505 8.65619 6.07809 8.7597 5.80856 8.96674C5.54294 9.17377 5.41012 9.46283 5.41012 9.83392C5.41012 10.1464 5.55466 10.4081 5.84372 10.6191C6.13278 10.8261 6.60934 11.0292 7.27341 11.2285C7.93747 11.4238 8.47067 11.6484 8.87301 11.9023C9.27536 12.1523 9.57028 12.4413 9.75778 12.7695C9.94528 13.0937 10.039 13.4745 10.039 13.912C10.039 14.623 9.76559 15.1894 9.21872 15.6113C8.67575 16.0292 7.93747 16.2382 7.00387 16.2382C6.38669 16.2382 5.81833 16.1249 5.2988 15.8984C4.78317 15.6679 4.38083 15.3515 4.09176 14.9492C3.80661 14.5468 3.66403 14.0781 3.66403 13.5429H5.14645C5.14645 14.0273 5.30661 14.4023 5.62692 14.6679C5.94723 14.9335 6.40622 15.0663 7.00387 15.0663C7.5195 15.0663 7.90622 14.9628 8.16403 14.7558C8.42575 14.5449 8.55661 14.2675 8.55661 13.9238ZM16.1152 14.1347H12.8105L12.1191 16.121H10.5781L13.8007 7.58978H15.1308L18.3593 16.121H16.8125L16.1152 14.1347ZM13.2265 12.9394H15.6992L14.4629 9.40033L13.2265 12.9394ZM26.0996 16.121H24.6172L20.8144 10.0683V16.121H19.332V7.58978H20.8144L24.6289 13.666V7.58978H26.0996V16.121ZM33.8398 8.7851H31.1797V16.121H29.709V8.7851H27.0722V7.58978H33.8398V8.7851ZM39.0371 14.1347H35.7324L35.041 16.121H33.5L36.7226 7.58978H38.0527L41.2812 16.121H39.7343L39.0371 14.1347ZM36.1484 12.9394H38.6211L37.3847 9.40033L36.1484 12.9394ZM47.1699 12.5058H43.7363V16.121H42.2539V7.58978H47.6738V8.7851H43.7363V11.3222H47.1699V12.5058ZM53.8379 12.3124H50.334V14.9374H54.4297V16.121H48.8515V7.58978H54.3886V8.7851H50.334V11.1406H53.8379V12.3124Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0H57.9999V1.56054L0 5.46188V0Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58 23.4081L6.48499e-05 23.4081L6.47029e-05 21.8475L58 17.9462L58 23.4081Z\",\n    fill: \"white\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.0d530ff1.svg\";\nexport { ForwardRef as ReactComponent };","import {\r\n  AppBar,\r\n  createStyles,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport { Menu } from '@material-ui/icons'\r\nimport { ReactComponent as Logo } from '../../../../assets/logo.svg'\r\n\r\nexport interface HeaderProps {\r\n  title: string\r\n  handleCloseDrawer: (event: React.KeyboardEvent | React.MouseEvent) => void\r\n}\r\n\r\nexport function Header({\r\n  title = 'Dashboard',\r\n  handleCloseDrawer,\r\n}: HeaderProps) {\r\n  const classes = useStyles()\r\n  return (\r\n    <AppBar position='static' style={{ backgroundColor: \"#1f497d\" }}>\r\n      <Toolbar color='#1f497d'>\r\n        <IconButton\r\n          edge='start'\r\n          className={classes.menuButton}\r\n          color='inherit'\r\n          aria-label='menu'\r\n          onClick={handleCloseDrawer}\r\n        >\r\n          <Menu />\r\n        </IconButton>\r\n        <Typography variant='h6' className={classes.title}>\r\n          {title}\r\n        </Typography>\r\n        <Logo />\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n)\r\n","import { useState } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { Drawer } from './drawer'\r\nimport { Header } from './header'\r\n\r\nexport function DrawerHeader() {\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const { pathname } = useLocation()\r\n  const handleClose = (event: React.KeyboardEvent | React.MouseEvent) => {\r\n    if (\r\n      event.type === 'keydown' &&\r\n      ((event as React.KeyboardEvent).key === 'Tab' ||\r\n        (event as React.KeyboardEvent).key === 'Shift')\r\n    ) {\r\n      return\r\n    }\r\n\r\n    setOpen(!open)\r\n  }\r\n  return (\r\n    <>\r\n      <Header title='Dashboard' handleCloseDrawer={handleClose} />\r\n      <Drawer pathname={pathname} open={open} handleClose={handleClose} />\r\n    </>\r\n  )\r\n}\r\n","import { Container, createStyles, makeStyles, Theme } from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport Bg from '../assets/bg-session.png'\r\nimport Header from '../components/public/header'\r\nimport Login from './login'\r\nimport Register from './register'\r\nimport ResetPassword from './resetPassword'\r\nimport { Dashboard } from './app/dashboard'\r\nimport { ManageUsers } from './app/manage-users'\r\nimport { Client } from './app/client'\r\nimport { DrawerHeader } from '../components/private/DrawerHeader'\r\n\r\nexport function Pages() {\r\n  useEffect(() => {\r\n    document.title = 'Santafe'\r\n  }, [])\r\n  //const { isAuth } = useJWT()\r\n  const role = localStorage.getItem('role')\r\n  const classes = useStyles()\r\n\r\n  //return <PrivateApp />\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path='/entrar' render={() => <div>\r\n          <Header />\r\n          <main className={classes.main}>\r\n            <Container className={classes.container} maxWidth={'lg'}>\r\n              <Login />\r\n            </Container>\r\n            <img className={classes.img} src={Bg} alt='backgroundImage' />\r\n          </main>\r\n        </div>} />\r\n        <Route path='/cadastrar' render={() => <div>\r\n          <Header />\r\n          <main className={classes.main}>\r\n            <Container className={classes.container} maxWidth={'lg'}>\r\n              <Register />\r\n            </Container>\r\n            <img className={classes.img} src={Bg} alt='backgroundImage' />\r\n          </main>\r\n        </div>} />\r\n        <Route path='/recuperar' render={() => <div>\r\n          <Header />\r\n          <main className={classes.main}>\r\n            <Container className={classes.container} maxWidth={'lg'}>\r\n              <ResetPassword />\r\n            </Container>\r\n            <img className={classes.img} src={Bg} alt='backgroundImage' />\r\n          </main>\r\n        </div>} />\r\n        <Route path='/dashboard' render={() => <div><DrawerHeader /><Dashboard /></div>} />\r\n        <Route path='/client' render={() => <div><DrawerHeader /><Client /></div>} />\r\n        <Route path='/cadastros' render={() => <div><DrawerHeader /><ManageUsers /></div>} />\r\n        <Route path='/' render={() => role ? (role === 'Cliente' ? <Redirect to='/dashboard' /> : <Redirect to='/cadastros' />) : <Redirect to='/entrar' />} />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    main: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      overflow: 'hidden',\r\n      maxHeight: '100vh',\r\n    },\r\n    container: {\r\n      height: '100vh',\r\n      paddingTop: 58,\r\n      paddingBottom: 58,\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      maxWidth: 288,\r\n      overflow: 'hidden',\r\n      [theme.breakpoints.up('sm')]: {\r\n        maxWidth: 520,\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        maxWidth: '100vw',\r\n        margin: 'initial',\r\n        justifyContent: 'space-between',\r\n        paddingLeft: 'initial',\r\n        paddingRight: 'initial',\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        justifyContent: 'center',\r\n      },\r\n    },\r\n    img: {\r\n      position: 'relative',\r\n      maxWidth: '50vw',\r\n      height: '100vh',\r\n      top: 0,\r\n      transition: '0.5s',\r\n      zIndex: theme.zIndex.appBar + 1,\r\n      [theme.breakpoints.down('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  })\r\n)\r\n","import { CssBaseline } from '@material-ui/core'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Pages } from './pages'\n\nfunction App() {\n  return (\n    <Router>\n      <CssBaseline />\n      <Pages />\n    </Router>\n  )\n}\nexport default App\n","import {\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from 'react'\n\ninterface JWTData {\n  token: string\n  isAuth: boolean\n}\n\ninterface ParsedJWT {\n  email: string\n  exp: number\n  iat: number\n  nbf: number\n  role: 'Cliente' | 'Admin'\n}\n\ninterface JWTProviderProps {\n  children: ReactNode\n}\n\ninterface JWTContextData extends JWTData {\n  setLocalData(jwtToken: string): void\n  removeToken(): void\n  atobJSON(): ParsedJWT\n}\n\nconst JWTContext = createContext<JWTContextData>({} as JWTContextData)\n\nexport const JWTProvider = ({ children }: JWTProviderProps) => {\n  const initialJWTState = { token: '', isAuth: false }\n  const [jwt, setJWT] = useState<JWTData>(initialJWTState)\n\n  const setLocalData = (jwtToken: string) => {\n    const tokenString = JSON.stringify(jwtToken)\n    window.localStorage.setItem('token', tokenString)\n    setJWT({ token: jwtToken, isAuth: true })\n  }\n\n  const removeToken = () => {\n    window.localStorage.removeItem('token')\n    setJWT(initialJWTState)\n  }\n\n  const atobJSON = (): ParsedJWT => {\n    const { token } = jwt\n    return JSON.parse(atob(token.split('.')[1]))\n  }\n\n  useEffect(() => {\n    const token = window.localStorage.getItem('token')\n    if (token !== null)\n      setJWT({ token: JSON.parse(token).result, isAuth: true })\n  }, [])\n\n  return (\n    <JWTContext.Provider\n      value={{ ...jwt, setLocalData, removeToken, atobJSON }}\n    >\n      {children}\n    </JWTContext.Provider>\n  )\n}\n\nexport function useJWT() {\n  return useContext(JWTContext)\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiTouchRipple: {\r\n      child: {\r\n        backgroundColor: '#6200EE',\r\n      },\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: '#02ACEB',\r\n      dark: '#6200EE',\r\n      light: '#6200EE',\r\n      contrastText: '#ffffff',\r\n    },\r\n    secondary: {\r\n      main: '#6200EE',\r\n    },\r\n  },\r\n})\r\n\r\nexport default theme\r\n","import { ThemeProvider } from '@material-ui/styles'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { JWTProvider } from './hooks/useJWT'\nimport reportWebVitals from './reportWebVitals'\nimport theme from './utils/theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <JWTProvider>\n        <App />\n      </JWTProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}